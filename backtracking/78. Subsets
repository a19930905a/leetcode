/*
    leetcode:https://leetcode.com/problems/subsets/
    Given a set of distinct integers, nums, return all possible subsets (the power set).

    Note: The solution set must not contain duplicate subsets.

    Example:

    Input: nums = [1,2,3]
    Output:
    [
      [3],
      [1],
      [2],
      [1,2,3],
      [1,3],
      [2,3],
      [1,2],
      []
    ]

思路: 利用 start 參數控制 for 迴圈 , 並在每次遞迴結束後刪除 temp List的最後參數使其能繼續追蹤剩餘的可能性

*/


class solution{
	public List<List<Integer>> subsets(int[] nums){
		List<List<Integer>> res = new ArrayList();
		
		helper(res,new ArrayList(),nums,0);
		return res;
	}
	public void helper(List<List<Integer>> res , List<Integer> temp , int[] nums, int start){
		res.add(new ArrayList(temp));
		for(int i = start ; i<nums.length ; i++){
			temp.add(nums[i]);
			helper(res,temp,nums,i+1);
			temp.remove(temp.size()-1);
		}	
	}
}
