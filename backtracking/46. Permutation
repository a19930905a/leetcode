/*
	leetcode : https://leetcode.com/problems/permutations/

	Given a collection of distinct integers, return all possible permutations.

	Example:

	Input: [1,2,3]
	Output:
	[
	  [1,2,3],
	  [1,3,2],
	  [2,1,3],
	  [2,3,1],
	  [3,1,2],
	  [3,2,1]
	]

思路: 利用 temp.contain(nums[i]) 判斷是否加入了重複的參數 , 也讓整個遞迴有中止條件

*/

class solution{
	public List<List<Integer>> permute(int[] nums){
		List<List<Integer>> res = new ArrayList();
		helper(res , new ArrayList() , nums );
		return res;
	}
	public void helper(List<List<Ingeter>> res , List<Integer> temp , int[] nums){
		if(temp.size() == nums.length)
			res.add(new ArrayList(temp));
			
		for(int i = 0 ; i<nums.length ; i++){
			if(temp.contains(nums[i])
				continue;
			temp.add(nums[i]);
			helper(res , temp , nums);
			temp.remove(temp.size()-1);
		}
	}
}
