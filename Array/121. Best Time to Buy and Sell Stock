/**

		leetcode : https://leetcode.com/problems/best-time-to-buy-and-sell-stock/
		
		Say you have an array for which the ith element is the price of a given stock on day i.

		If you were only permitted to complete at most one transaction (i.e., buy one and sell one share of the stock), design an algorithm to find the maximum profit.

		Note that you cannot sell a stock before you buy one.

		Example 1:

		Input: [7,1,5,3,6,4]
		Output: 5
		Explanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.
					 Not 7-1 = 6, as selling price needs to be larger than buying price.
		Example 2:

		Input: [7,6,4,3,1]
		Output: 0
		Explanation: In this case, no transaction is done, i.e. max profit = 0.

思路 : 這題是要我們找出最好的買進和賣出的時機並返回最大的利益 , 我們可以在走訪陣列的時候先找出最低的買進時機也同時計算最大效益

*/

class Solution {
    public int maxProfit(int[] prices) {
		int buy = Integer.MAX_VALUE;
		int max = 0;
		
		for(int i = 0 ; i<prices.length ; i++){
			buy = Math.min(buy,price[i]);			//更新最佳的買進
			max = Math.max(max,price[i]-buy);		//更新最大效益
		}
		return max;
	}
}
