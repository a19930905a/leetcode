/*

	leetcode : https://leetcode.com/problems/remove-duplicates-from-sorted-array/
	
	Given a sorted array nums, remove the duplicates in-place such that each element appear only once and return the new length.

	Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.

	Example 1:

	Given nums = [1,1,2],

	Your function should return length = 2, with the first two elements of nums being 1 and 2 respectively.

	It doesn't matter what you leave beyond the returned length.
	Example 2:

	Given nums = [0,0,1,1,1,2,2,3,3,4],

	Your function should return length = 5, with the first five elements of nums being modified to 0, 1, 2, 3, and 4 respectively.

	It doesn't matter what values are set beyond the returned length.


思路 : 這題要求我們刪除陣列重複元素,傳回新陣列應有長度並且重組陣列,我們只要在走訪陣列的時候,每遇到重複的元素就更新 j 的值並將新的元素放入 num[j]
       位置即可

*/

class Solution {
    public int removeDuplicates(int[] nums) {
		int j = 1 ;
		for(int i=0 ; i<nums.length-1 ; i++){
			if(nums[i] != nums[i+1]){
				nums[j] = nums[i+1];
				j++;
			}
		}
		return j;
	}
}
