/**
		leetcode : https://leetcode.com/problems/reverse-words-in-a-string/	
		
		Given an input string, reverse the string word by word.

		Example 1:

		Input: "the sky is blue"
		Output: "blue is sky the"

		Example 2:

		Input: "  hello world!  "
		Output: "world! hello"
		Explanation: Your reversed string should not contain leading or trailing spaces.

		Example 3:

		Input: "a good   example"
		Output: "example good a"
		Explanation: You need to reduce multiple spaces between two words to a single space in the reversed string.


		Note:

		A word is defined as a sequence of non-space characters.
		Input string may contain leading or trailing spaces. However, your reversed string should not contain leading or 
		trailing spaces.
		You need to reduce multiple spaces between two words to a single space in the reversed string.


思路:這題反轉字符串內的字符串 , 並且要清掉多餘的空格 , 我們可以設定一個陣列來存放以 //s 所切割出來的所有字符串並以倒敘的方式插入到
	StringBuilder內,這邊要注意的是多餘的空格也會跟著進到 temp 陣列內,當走訪到的時候我們要跳過

*/
class Solution {
    public String reverseWords(String s) {
		String[] temp = s.split("\\s");			//切割s
		StringBuilder sb = new StringBuilder();
		
		for(int i = temp.length-1 ; i>=0 ; i--){
			if(temp[i].equals(""))				//多餘空格
				continue;
			sb.append(temp[i]);
			sb.append(" ");
		}
		
		return sb.toString().trim();
	}
}
